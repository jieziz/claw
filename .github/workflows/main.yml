name: Deploy to Server

on:
  push:
    branches:
      - main  # 触发部署的分支

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # 检查文件结构
      - name: List files
        run: |
          pwd
          ls -la
          ls -la nginx/
          echo "Checking backend files:"
          ls -la server.js || echo "server.js not found"
          ls -la init.sql || echo "init.sql not found"
          ls -la package.json || echo "package.json not found"
          ls -la config/database.js || echo "database.js not found"

      # 部署 Nginx 配置
      - name: Deploy Nginx config
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 22
          source: "./nginx/claw.ink.conf"
          target: "/etc/nginx/conf.d"
          strip_components: 2

      # 部署静态文件到网站目录
      - name: Deploy static files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 22
          source: |
            public/*
          target: "/www/wwwroot/claw.ink"
          strip_components: 1
          overwrite: true
          exclude: |
            public/README.md
            public/.git*
            public/*.log

      # 部署后端文件
      - name: Deploy backend files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 22
          source: "."
          target: "/opt/clawcloud"
          strip_components: 0
          overwrite: true
          exclude: |
            .git*
            node_modules
            public
            nginx

      # 重启服务
      - name: Restart services
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 22
          script: |
            # 安装 certbot
            sudo apt-get update
            sudo apt-get install -y certbot python3-certbot-nginx
            
            # 申请证书（如果不存在）
            if [ ! -f "/etc/letsencrypt/live/claw.ink/fullchain.pem" ]; then
                sudo certbot certonly --nginx \
                    --non-interactive \
                    --agree-tos \
                    --email admin@claw.ink \
                    -d claw.ink -d www.claw.ink
            fi
            
            # 清理错误的配置文件
            sudo rm -rf /etc/nginx/conf.d/nginx
            
            # 检查并备份当前 Nginx 配置
            sudo cp /etc/nginx/conf.d/claw.ink.conf /etc/nginx/conf.d/claw.ink.conf.bak || true
            
            # 验证 Nginx 配置
            sudo nginx -t
            
            # 如果配置正确则重启 Nginx，否则恢复备份
            if [ $? -eq 0 ]; then
                echo "Nginx configuration is valid"
                echo "Current Nginx configuration:"
                sudo nginx -T
                sudo systemctl restart nginx
            else
                sudo mv /etc/nginx/conf.d/claw.ink.conf.bak /etc/nginx/conf.d/claw.ink.conf
                echo "Nginx configuration test failed, restored backup"
                exit 1
            fi
            
            # 设置网站目录权限
            sudo mkdir -p /www/wwwroot/claw.ink
            sudo chown -R www-data:www-data /www/wwwroot/claw.ink
            
            # 检查网站文件
            echo "Checking website files:"
            ls -la /www/wwwroot/claw.ink/
            
            # 重启后端服务
            cd /opt/clawcloud
            mkdir -p config logs data
            touch logs/error.log
            
            # 设置数据库目录
            export SQLITE_DB_PATH="/opt/clawcloud/data/database.sqlite"
            
            # 初始化数据库
            if [ ! -f "$SQLITE_DB_PATH" ]; then
                sqlite3 "$SQLITE_DB_PATH" < init.sql
            fi
            
            # 确保网站日志目录存在
            sudo mkdir -p /www/wwwlogs
            sudo chown -R $USER:$USER /www/wwwlogs
            
            # 安装编译工具和依赖
            sudo apt-get update
            sudo apt-get install -y python3 make gcc g++ build-essential sqlite3 libsqlite3-dev
            npm install -g node-gyp
            
            # 清理并重新安装依赖
            rm -rf node_modules package-lock.json
            npm install --build-from-source
            npm install better-sqlite3 --build-from-source
            
            # 设置环境变量
            echo "export SQLITE_DB_PATH=/opt/clawcloud/data/database.sqlite" >> ~/.bashrc
            source ~/.bashrc
            
            # 重启服务
            pm2 delete clawcloud || true
            pm2 start server.js --name clawcloud
            pm2 save
